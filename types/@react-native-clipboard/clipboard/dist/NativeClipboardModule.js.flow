/* @flow
 * @generated by TsFlower
 */
import type { EmitterSubscription as $tsflower_subst$RN$EmitterSubscription } from 'tsflower/subst/react-native';
import { type TurboModule } from 'react-native/Libraries/TurboModule/RCTExport';
import { type Int32 } from 'react-native/Libraries/Types/CodegenTypes';

export interface Spec extends TurboModule {
  getString(): Promise<string>;
  getStrings(): Promise<string[]>;
  getImagePNG(): Promise<string>;
  getImageJPG(): Promise<string>;
  setImage(content: string): Promise<void>;
  getImage(): Promise<string>;
  setString(content: string): void;
  setStrings(content: string[]): void;
  hasString(): Promise<boolean>;
  hasImage(): Promise<boolean>;
  hasURL(): Promise<boolean>;
  hasNumber(): Promise<boolean>;
  hasWebURL(): Promise<boolean>;
  setListener(): void;
  removeListener(): void;
  addListener(eventName: string): void;
  removeListeners(count: Int32): void;
}

declare var ClipboardTurboModule: Spec;
export default ClipboardTurboModule;
declare var addListener: (callback: () => void) => $tsflower_subst$RN$EmitterSubscription;
declare var removeAllListeners: () => void;
export { addListener, removeAllListeners };
